$reg_uname=/^(?=.*[a-z])[a-z0-9]{6,20}$/g;$reg_pswd=/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*?[^\w\s]).{8,}$/g;$.validator.addMethod("regex",function(a,b,c){c=new RegExp(c);return this.optional(b)||c.test(a)},"RegExp validation failed");
$("#form").validate({rules:{username:{required:!0,minlength:5,maxlength:15},email:{required:!0,email:!0,remote:{url:"isEmailAvailable.php",type:"post",data:{email:function(){return $("#form :input[name='email']").val()}}}},password:{required:!0,regex:$reg_pswd},confirm_password:{required:!0,equalTo:"#password"},agreement:{required:!0}},messages:{username:{required:"Please enter a username",minlength:"Username must be 5-15 characters",maxlength:"Username must be 5-15 characters"},email:{required:"Please provide an email address",
email:"Please enter a valid email address.",remote:jQuery.validator.format("Email address: '{0}' is already registered.")},password:{required:"Please provide your password",regex:"Password must be at least 8 alphanumeric; uppercase & lowercase characters with symbols"},confirm_password:{required:"Please confirm password",equalTo:"Passwords are not matching"},agreement:{required:"(Agreed?) "}},errorElement:"span",errorClass:"error-message",errorPlacement:function(a,b){b.parent(".input-group").length?
a.insertAfter(b.parent()):a.insertAfter(b)}});$("#form").on("click","#submit",function(){$("#form").valid()&&$.ajax({url:"processForm.php",type:"POST",data:$("#form").serialize(),datatype:"json",success:processResponse,error:function(a){console.log(a.message)}})});function processResponse(a){a=$.parseJSON(a);a.error?($('<span class="error-message">'+a.error+"</span>").insertAfter(".form-title"),console.warn(a.exception)):(alert(a.status),window.location.replace("index.html"))};